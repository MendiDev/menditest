plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
//    id 'maven-publish'
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 21
        targetSdk 31

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

//configurations {
//    includeAars // define new configuration
//   // includeAars
//}

dependencies {
    //implementation fileTree(dir: 'libs', include: ['mylibraryB-debug.aar'])

    implementation project(":mylibraryB")
    implementation "com.google.code.gson:gson:2.8.9"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

}

//project.afterEvaluate {
//    def isAndroidLibraryProject = project.plugins.hasPlugin('com.android.library')
//    if(isAndroidLibraryProject) {
//        task copyDeps(type:Copy) {
//            from configurations.includeAars {
//                include '**/*.aar'
//            }
//            into "./build/intermediates/packaged-classes/release/libs" // this folder gets packaged inside the AAR
//        }
//        mergeReleaseJniLibFolders.dependsOn copyDeps // only this stage worked for me - neither earlier, nor later
//
//        task copyDebugDeps(type:Copy) {
//            from configurations.includeAars {
//                include '**/*.aar'
//            }
//            into "./build/intermediates/packaged-classes/debug/libs"
//        }
//        mergeDebugJniLibFolders.dependsOn copyDebugDeps
//    }
//}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                groupId = 'com.github.MendiDev'
                artifactId = 'menditest'
                version = '1.0.5'
            }
        }
    }
}